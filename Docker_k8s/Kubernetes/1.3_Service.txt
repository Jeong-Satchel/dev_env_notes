Service
- 일반적인 분산환경에서는 복수의 Pod를 서비스하면서
  로드밸런서를 이용하여 하나의 IP와 포트로 묶어서 하나의 서비스로 제공하게 됨.
- k8s는 대체로 Pod 내에 Volume들과 컨테이너들을 정의한 이후 하나의 Pod로만 서비스하지 않음.

cf) 로드 밸런싱(load balancing; 부하분산)은 컴퓨터 네트워크 기술의 일종으로
    둘 혹은 셋이상의 중앙처리장치 혹은 저장장치와 같은 컴퓨터 자원들에게 작업을 나누는 것

=================================================================================
라벨(label)과 라벨 셀렉터(label selector)
- Service를 정의할때, 라벨 셀렉터를 통해 어떤 Pod들을 해당 서비스로 묶을 것인지를 정의함.

1) 각 Pod들을 생성할 때 metadata 정보로 라벨 설정. 
2) Service는 라벨 셀렉터에서 특정 라벨을 가지고 있는 Pod만 선택하여 서비스에 묶게 됨.

ex) 서비스가 라벨이 “myapp”인 Pod들만 골라내서 서비스에 넣고, 
    해당 Pod들 간에만 로드밸런싱을 통하여 외부로 서비스를 제공.

cf) 로드밸런서에서 Pod 목록을 지정하기 위해 Pod의 IP 주소 이용하면 안됨.
- Pod의 경우 동적으로 생성되며, 장애가 생기면 자동으로 재실행되면서 IP가 변경되기 때문.
- 오토 스케일링으로 인하여 Pod가 동적으로 추가 또는 삭제되기 때문에, 
  이렇게 추가/삭제된 Pod 목록을 로드밸런서가 유연하게 선택해 줘야 함. 

=================================================================================
[Service를 정의한 오브젝트 스펙 예시]

kind: Service        // 리소스 종류는 Service
apiVersion: v1       // 스크립트를 실행할 api 버전은 v1으로 apiVersion에 정의
metadata:         
  name: my-service   // 메타데이터로 서비스명을 my-service로 지정
spec:                // 서비스에 대한 스펙을 정의
  selector:
    app: myapp  // selector: 라벨이 app:myapp인 Pod만을 선택하여 서비스에서 서비스를 제공
  ports:
  - protocol: TCP    // 포트는 TCP를 이용
    port: 80         // 서비스는 80 포트로 서비스
    targetPort: 9376 // 서비스의 80 포트의 요청을 컨테이너의 9376 포트로 연결하여 서비스를 제공

=================================================================================
