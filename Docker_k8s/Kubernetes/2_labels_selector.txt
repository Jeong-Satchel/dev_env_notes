Label
- 라벨은 쿠버네티스의 리소스를 선택하기 위해 사용됨.
- 각 리소스는 하나 이상의 라벨을 지닐 수 있고, 
  라벨 검색 조건에 따라서 특정 라벨을 지니고 있는 리소스들만 선택될 수 있음.

특정 라벨로 선택된 리소스들만 
1) 배포하거나 업데이트 가능.
2) 하나의 Service에 연결 가능. 
3) 네트워크 접근 권한 부여하는 등의 행동들 전부 가능. 

=================================================================================
[라벨 설정]
- 라벨은 metadata 섹션에 키/값 쌍으로 정의 가능. 
- 하나의 리소스에는 하나의 라벨이 아니라 여러 라벨을 동시에 적용 가능.

"metadata": {
  "labels": {
    "key1" : "value1",
    "key2" : "value2"
  }
}

=================================================================================
[라벨 셀렉터 사용 방법]
- 오브젝트 스펙에서 selector 라고 정의하고 라벨 조건을 기재. 
- 쿠버네티스의 두 가지 셀렉터: Equaility based selector & Set based selector

Equality based selector : 같냐/다르냐와 같은 등가 조건을 이용하여 리소스를 선택하는 방법
> environment = dev
> tier != frontend    

Set based selector : 집합의 개념을 사용하여 리소스를 선택하는 방법. (advanced)
> environment in (production,qa) // environment가 production 또는 qa인 리소스 선택.
> tier notin (frontend,backend) // tier가 frontend도 아니고 backend도 아닌 리소스들 전부 선택.

=================================================================================
[my-service라는 이름의 서비스를 정의]
- selector에서 app: myapp라고 정의
  => Pod들 중 app이라는 라벨의 값이 myapp 것들만 골라서 해당 Service에 바인딩
  => 9376 포트로 서비스

kind: Service
apiVersion: v1
metadata:
  name: my-service
spec:
  selector:
    app: myapp         // 라벨 셀렉터: app 라벨의 값이 myapp인 Pod들만 선택.
  ports:
  - protocol: TCP
    port: 80
    targetPort: 9376

=================================================================================
